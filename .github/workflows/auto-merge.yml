name: Auto-merge PR

on:
  workflow_run:
    workflows: ["PR Tests"]
    types:
      - completed

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR information
        id: pr-info
        run: |
          # Get the PR number from the workflow run
          PR_NUMBER=$(gh api \
            /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
            --jq '.pull_requests[0].number')

          if [[ -z "$PR_NUMBER" || "$PR_NUMBER" == "null" ]]; then
            echo "No PR found for this workflow run"
            exit 0
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

          # Get PR details including labels
          PR_DATA=$(gh pr view $PR_NUMBER --json labels,state,mergeable)

          # Check if PR has auto-merge label
          HAS_AUTO_MERGE=$(echo "$PR_DATA" | jq '.labels[] | select(.name == "auto-merge") | .name' -r)

          # Check PR state and mergeability
          PR_STATE=$(echo "$PR_DATA" | jq '.state' -r)
          PR_MERGEABLE=$(echo "$PR_DATA" | jq '.mergeable' -r)

          echo "PR #$PR_NUMBER:"
          echo "  State: $PR_STATE"
          echo "  Mergeable: $PR_MERGEABLE"
          echo "  Has auto-merge label: $([[ -n "$HAS_AUTO_MERGE" ]] && echo "yes" || echo "no")"

          # Set outputs
          echo "has_auto_merge_label=$([[ -n "$HAS_AUTO_MERGE" ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "pr_state=$PR_STATE" >> $GITHUB_OUTPUT
          echo "pr_mergeable=$PR_MERGEABLE" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge PR
        if: |
          steps.pr-info.outputs.has_auto_merge_label == 'true' &&
          steps.pr-info.outputs.pr_state == 'OPEN' &&
          steps.pr-info.outputs.pr_mergeable == 'MERGEABLE'
        run: |
          echo "üöÄ Auto-merging PR #${{ steps.pr-info.outputs.pr_number }}"

          # Enable auto-merge with squash method
          gh pr merge ${{ steps.pr-info.outputs.pr_number }} \
            --squash \
            --auto \
            --delete-branch

          echo "‚úÖ Auto-merge enabled for PR #${{ steps.pr-info.outputs.pr_number }}"
          echo "The PR will be automatically merged once all checks pass."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR
        if: |
          steps.pr-info.outputs.has_auto_merge_label == 'true' &&
          steps.pr-info.outputs.pr_state == 'OPEN' &&
          steps.pr-info.outputs.pr_mergeable == 'MERGEABLE'
        run: |
          gh pr comment ${{ steps.pr-info.outputs.pr_number }} --body \
            "ü§ñ **Auto-merge enabled!**

            This automated Gitea update PR has passed all tests and will be automatically merged.

            - ‚úÖ All PR tests passed
            - ‚úÖ Auto-merge label detected
            - ‚úÖ PR is mergeable

            The PR will merge automatically once all required status checks complete."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log non-auto-mergeable PRs
        if: |
          steps.pr-info.outputs.pr_number != '' &&
          (steps.pr-info.outputs.has_auto_merge_label != 'true' ||
           steps.pr-info.outputs.pr_state != 'OPEN' ||
           steps.pr-info.outputs.pr_mergeable != 'MERGEABLE')
        run: |
          echo "‚ÑπÔ∏è PR #${{ steps.pr-info.outputs.pr_number }} will not be auto-merged:"
          echo "  - Has auto-merge label: ${{ steps.pr-info.outputs.has_auto_merge_label }}"
          echo "  - PR state: ${{ steps.pr-info.outputs.pr_state }}"
          echo "  - PR mergeable: ${{ steps.pr-info.outputs.pr_mergeable }}"